import javax.swing.JOptionPane;


public class editBalanceSheet {
	
	static Main main = new Main();

	public static void emptyBalanceSheetError()
	{
		JOptionPane.showMessageDialog(null,
			    "Please insert data in the balance sheet before editing.",
			    "Database Error",
			    JOptionPane.ERROR_MESSAGE);	
	}
	
	
	
	public static void editMenu() //generate the editing menu
	{
		Object[] editOptions = {"Modify an Entry","Delete an Entry"};
		int editChoiceInput = -1;
		editChoiceInput = JOptionPane.showOptionDialog(null,"Please choose an editing option.","Editing Menu",
				JOptionPane.YES_NO_CANCEL_OPTION, JOptionPane.QUESTION_MESSAGE, null,editOptions,editOptions[1]);
		
			if(editChoiceInput==-1)
			{
				JOptionPane.showMessageDialog(null,"Please select a editing function to execute."
					,"Error: No Input Found", JOptionPane.ERROR_MESSAGE);
				editMenu();		
			}
			if(editChoiceInput==0)
			{
				modifyEntrySelector();
			}
			if(editChoiceInput==1)
			{
				deleteEntrySelector();		
			}
		
	}
	

	public static String replacementDollarAmountInput = ""; //public replacement variables for dollar amounts
	public static String replacementTypeOfBalance = "";
	public static String replacementMemo = "";
	public static int userSelectedEditingIndex = -1;

	public static void clearModifyMenuVariables()
	{
		replacementDollarAmountInput = "";	
		replacementTypeOfBalance = "";
		replacementMemo = "";
		userSelectedEditingIndex = -1;
	}
	

	public static void modifyEntrySelector()  //sub_UI
	{	
		clearModifyMenuVariables(); //delete variable data
 		String editorSelectorEntries = ""; //string used for the transfer of string to object
		Main.editorSelector.clear(); //clear all data in editorSelector object
		Object[] selectorObject = null;	//set selectorObject to null

		for(int i = 0; i < Main.balances.size(); i++) //generate selector objects
		{
			editorSelectorEntries = "#"+(i+1)+" $"+Main.balances.get(i)+" - "+Main.typeOfBalance.get(i)
			+" - Memo: "+Main.memos.get(i)+"\n";
			Main.editorSelector.add(editorSelectorEntries);
		}

		selectorObject = Main.editorSelector.toArray(); //update selector object
		
		String userEditChoice = (String)JOptionPane.showInputDialog(
				null,"Select an entry. Clicking on cancel will return you to the main menu.","Seletor",JOptionPane.PLAIN_MESSAGE,null,
                selectorObject,
                selectorObject[0]); 
		
		userSelectedEditingIndex = Main.editorSelector.indexOf(userEditChoice); //set a public editing variable
		
	
		
		if(Main.editorSelector.indexOf(userEditChoice)==-1) //edit here for no-response/ cancel options code
		{
			clearModifyMenuVariables(); //delete variable data
			Main.generateUserOptions(); //return to menu
		}
		
		replaceBalanceType();
	}
	

	public static void replaceBalanceType() //replace balance type
	{
		Object[] ReplacementBalanceTypeOptions = {"Income","Expenditure"};
		
		int replacementbalanceTypeInput = JOptionPane.showOptionDialog(null,"Please enter a new balance catagory to replace the prior.","Select the new balance entry type",
				JOptionPane.YES_NO_CANCEL_OPTION, JOptionPane.QUESTION_MESSAGE, null,ReplacementBalanceTypeOptions,ReplacementBalanceTypeOptions[1]);
		
		
		if(replacementbalanceTypeInput == -1)
		{
			JOptionPane.showMessageDialog(null,"Please enter a new balance catagory to replace the prior."
					,"Error: No Input Found", JOptionPane.ERROR_MESSAGE);
			
		}

		if(replacementbalanceTypeInput == 0)
		{
		replacementTypeOfBalance = "Income";
		replaceBalance();
		
		}
		if(replacementbalanceTypeInput == 1)
		{
		replacementTypeOfBalance = "Expenditure";
		replaceBalance();
		}


	}

	public static void replaceBalance()
	{

		replacementDollarAmountInput = JOptionPane.showInputDialog(null, "please enter a new figure to replace the prior value.");	

		

		try //checks if the string can be tested as a double
		{
			Double.parseDouble(replacementDollarAmountInput);
			if(replacementDollarAmountInput.startsWith("-")) //remove negatives from entry
			{
				replacementDollarAmountInput = replacementDollarAmountInput.substring(1, replacementDollarAmountInput.length()-1);
			}
			replaceMemo();
		}
		catch(NumberFormatException e)
		{

			JOptionPane.showMessageDialog(null, "\""+replacementDollarAmountInput+"\" is not a valid input. Please input a valid number for an input.", "Input Error!",JOptionPane.ERROR_MESSAGE);
			replaceBalance();
		}  

	}

	public static void replaceMemo()
	{
		String replacementInputMemo = JOptionPane.showInputDialog(null, "Add a memo to this transation. Leaving this "
				+ "dialog box blank will result in an absence of a note.");	
		replacementMemo = replacementInputMemo;
		

		if(comfirmation.verifyEntryReplacement()==true)
		{
		Main.balances.set(userSelectedEditingIndex, replacementDollarAmountInput);	
		Main.typeOfBalance.set(userSelectedEditingIndex, replacementTypeOfBalance);	
		Main.memos.set(userSelectedEditingIndex, replacementMemo);	
		JOptionPane.showMessageDialog(null,"All changes have been made successfully.");
		}
		else
		{
		clearModifyMenuVariables();	//delete all variables
		}
	}
		
	public static int userSelectedDeleteIndex = -1;
	

	public static void deleteEntrySelector()
	{
		
		clearModifyMenuVariables(); //delete variable data
 		String deleteSelectorEntries = ""; //string used for the transfer of string to object
		Main.editorSelector.clear(); //clear all data in editorSelector object
		Object[] selectorObject = null;	//set selectorObject to null

		for(int i = 0; i < Main.balances.size(); i++) //generate selector objects
		{
			deleteSelectorEntries = "#"+(i+1)+" $"+Main.balances.get(i)+" - "+Main.typeOfBalance.get(i)
			+" - Memo: "+Main.memos.get(i)+"\n";
			Main.editorSelector.add(deleteSelectorEntries);
		}

		selectorObject = Main.editorSelector.toArray(); //update selector object
		
		String userDeleteChoice = (String)JOptionPane.showInputDialog(
				null,"Select an entry to delete. Clicking on cancel will return you to the main menu.","Delete Entry Selector",JOptionPane.PLAIN_MESSAGE,null,
                selectorObject,
                selectorObject[0]); 
		
		userSelectedDeleteIndex = Main.editorSelector.indexOf(userDeleteChoice); //set a public editing variable
		
		if(Main.editorSelector.indexOf(userDeleteChoice)==-1) //edit here for no-response/ cancel options code
		{
			clearModifyMenuVariables(); //delete variable data
			Main.generateUserOptions(); //return to menu
		}
		
		if(comfirmation.verifyEntryDeletion()==true)
		{
		Main.balances.remove(userSelectedDeleteIndex);
		Main.typeOfBalance.remove(userSelectedDeleteIndex);
		Main.memos.remove(userSelectedDeleteIndex);
		}
		else
		{
		userSelectedDeleteIndex = -1;	
		}

	}	
}
		

	

